---
- name: Update apt cache
  apt: update_cache=yes cache_valid_time=3600
  become: true

- name: Install required software
  apt: name={{ item }} state=present
  with_items:
    - apache2
    - mysql-server
    - php5-mysql
    - php5
    - libapache2-mod-php5
    - php5-mcrypt
    - python-mysqldb
  become: true

- name: Disable default apache site
  command: a2dissite 000-default.conf
  notify:
   - restart apache
  become: true

- name: Prevent directory listing
  copy: src=dir.conf dest=/etc/apache2/mods-enabled/dir.conf
  notify:
    - restart apache
  become: true

- name: Install php extensions
  apt: name={{ item }} state=present
  with_items:
    - php5-gd
    - libssh2-php
  become: true

- name: Run mysql_install_db
  command: mysql_install_db
  become: true

- name: Sets the root password
  mysql_user: user=root password="{{ mysql_root_pwd }}" host=localhost
  become: true

- name: Create .my.cnf
  template:
    src: ".my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root
    group: root
    mode: 0600
  become: true

- name: Deletes anonymous MySQL server user for ansible_fqdn
  mysql_user: user="" host="{{ ansible_fqdn }}" state="absent"
  become: true

- name: Deletes anonymous MySQL server user for localhost
  mysql_user: user="" state="absent"
  become: true

- name: Secures the MySQL root user for IPV6 localhost (::1)
  mysql_user: user="root" password="{{ mysql_root_pwd }}" host="::1"
  become: true

- name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user: user="root" password="{{ mysql_root_pwd }}" host="127.0.0.1"
  become: true

- name: Secures the MySQL root user for localhost domain (localhost)
  mysql_user: user="root" password="{{ mysql_root_pwd }}" host="localhost"
  become: true

- name: Secures the MySQL root user for server_hostname domain
  mysql_user: user="root" password="{{ mysql_root_pwd }}" host="{{ ansible_fqdn }}"
  become: true

- name: Removes the MySQL test database
  mysql_db: db=test state=absent
  become: true

- name: Create mysql database
  mysql_db: name={{ mysql_db }} state=present
  become: true

- name: Create mysql user
  mysql_user: name={{ mysql_user }} password="{{ mysql_pwd }}" priv={{ mysql_db }}.*:ALL host='localhost' state=present
  become: true

- name: Add group
  group: name={{ user }}
  become: true

- name: Add user
  user: name={{ user }} group={{ user }}
  become: true

- name: Download WordPress
  get_url:
    url=https://wordpress.org/latest.tar.gz
    dest=/tmp/wordpress.tar.gz
    validate_certs=no

- name: Extract WordPress
  unarchive:
    src=/tmp/wordpress.tar.gz
    dest=/tmp/
    copy=no

- name: Move WordPress into place
  synchronize:
    src=/tmp/wordpress/
    dest=/var/www/{{ site_path }}/
    archive=yes
    delete=yes
  delegate_to: "{{ inventory_hostname }}"
  become: true

- name: Change ownership of WordPress installation
  file: path=/var/www/{{ site_path }}/ owner={{ user }} group=www-data state=directory recurse=yes setype=httpd_sys_content_t
  become: true

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"

- name: Copy WordPress config file
  template: src=wp-config.php.j2 dest=/var/www/{{ site_path }}/wp-config.php
  become: true

- name: Create apache site config
  template: src=apache-site.conf.j2 dest=/etc/apache2/sites-available/{{ site_url }}.conf
  become: true

- name: Enable {{ site_url }} apache site
  command: a2ensite {{ site_url }}.conf
  notify:
   - restart apache
  become: true
